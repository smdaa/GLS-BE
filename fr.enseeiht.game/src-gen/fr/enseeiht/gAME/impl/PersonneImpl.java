/**
 * generated by Xtext 2.17.1
 */
package fr.enseeiht.gAME.impl;

import fr.enseeiht.gAME.Condition;
import fr.enseeiht.gAME.Description;
import fr.enseeiht.gAME.GAMEPackage;
import fr.enseeiht.gAME.Interaction;
import fr.enseeiht.gAME.Lieu;
import fr.enseeiht.gAME.Personne;
import fr.enseeiht.gAME.Visibilite;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Personne</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.enseeiht.gAME.impl.PersonneImpl#getName <em>Name</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.PersonneImpl#getLocalisation <em>Localisation</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.PersonneImpl#getDescriptions <em>Descriptions</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.PersonneImpl#getInteraction <em>Interaction</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.PersonneImpl#getVisibilite <em>Visibilite</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.PersonneImpl#getConditionsVisibilite <em>Conditions Visibilite</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PersonneImpl extends MinimalEObjectImpl.Container implements Personne
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getLocalisation() <em>Localisation</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocalisation()
   * @generated
   * @ordered
   */
  protected Lieu localisation;

  /**
   * The cached value of the '{@link #getDescriptions() <em>Descriptions</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescriptions()
   * @generated
   * @ordered
   */
  protected Description descriptions;

  /**
   * The cached value of the '{@link #getInteraction() <em>Interaction</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInteraction()
   * @generated
   * @ordered
   */
  protected Interaction interaction;

  /**
   * The default value of the '{@link #getVisibilite() <em>Visibilite</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibilite()
   * @generated
   * @ordered
   */
  protected static final Visibilite VISIBILITE_EDEFAULT = Visibilite.VISIBLE;

  /**
   * The cached value of the '{@link #getVisibilite() <em>Visibilite</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibilite()
   * @generated
   * @ordered
   */
  protected Visibilite visibilite = VISIBILITE_EDEFAULT;

  /**
   * The cached value of the '{@link #getConditionsVisibilite() <em>Conditions Visibilite</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConditionsVisibilite()
   * @generated
   * @ordered
   */
  protected Condition conditionsVisibilite;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PersonneImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GAMEPackage.Literals.PERSONNE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GAMEPackage.PERSONNE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Lieu getLocalisation()
  {
    if (localisation != null && localisation.eIsProxy())
    {
      InternalEObject oldLocalisation = (InternalEObject)localisation;
      localisation = (Lieu)eResolveProxy(oldLocalisation);
      if (localisation != oldLocalisation)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GAMEPackage.PERSONNE__LOCALISATION, oldLocalisation, localisation));
      }
    }
    return localisation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Lieu basicGetLocalisation()
  {
    return localisation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLocalisation(Lieu newLocalisation)
  {
    Lieu oldLocalisation = localisation;
    localisation = newLocalisation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GAMEPackage.PERSONNE__LOCALISATION, oldLocalisation, localisation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Description getDescriptions()
  {
    return descriptions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDescriptions(Description newDescriptions, NotificationChain msgs)
  {
    Description oldDescriptions = descriptions;
    descriptions = newDescriptions;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GAMEPackage.PERSONNE__DESCRIPTIONS, oldDescriptions, newDescriptions);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescriptions(Description newDescriptions)
  {
    if (newDescriptions != descriptions)
    {
      NotificationChain msgs = null;
      if (descriptions != null)
        msgs = ((InternalEObject)descriptions).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GAMEPackage.PERSONNE__DESCRIPTIONS, null, msgs);
      if (newDescriptions != null)
        msgs = ((InternalEObject)newDescriptions).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GAMEPackage.PERSONNE__DESCRIPTIONS, null, msgs);
      msgs = basicSetDescriptions(newDescriptions, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GAMEPackage.PERSONNE__DESCRIPTIONS, newDescriptions, newDescriptions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Interaction getInteraction()
  {
    return interaction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInteraction(Interaction newInteraction, NotificationChain msgs)
  {
    Interaction oldInteraction = interaction;
    interaction = newInteraction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GAMEPackage.PERSONNE__INTERACTION, oldInteraction, newInteraction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInteraction(Interaction newInteraction)
  {
    if (newInteraction != interaction)
    {
      NotificationChain msgs = null;
      if (interaction != null)
        msgs = ((InternalEObject)interaction).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GAMEPackage.PERSONNE__INTERACTION, null, msgs);
      if (newInteraction != null)
        msgs = ((InternalEObject)newInteraction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GAMEPackage.PERSONNE__INTERACTION, null, msgs);
      msgs = basicSetInteraction(newInteraction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GAMEPackage.PERSONNE__INTERACTION, newInteraction, newInteraction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Visibilite getVisibilite()
  {
    return visibilite;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisibilite(Visibilite newVisibilite)
  {
    Visibilite oldVisibilite = visibilite;
    visibilite = newVisibilite == null ? VISIBILITE_EDEFAULT : newVisibilite;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GAMEPackage.PERSONNE__VISIBILITE, oldVisibilite, visibilite));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Condition getConditionsVisibilite()
  {
    return conditionsVisibilite;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConditionsVisibilite(Condition newConditionsVisibilite, NotificationChain msgs)
  {
    Condition oldConditionsVisibilite = conditionsVisibilite;
    conditionsVisibilite = newConditionsVisibilite;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GAMEPackage.PERSONNE__CONDITIONS_VISIBILITE, oldConditionsVisibilite, newConditionsVisibilite);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConditionsVisibilite(Condition newConditionsVisibilite)
  {
    if (newConditionsVisibilite != conditionsVisibilite)
    {
      NotificationChain msgs = null;
      if (conditionsVisibilite != null)
        msgs = ((InternalEObject)conditionsVisibilite).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GAMEPackage.PERSONNE__CONDITIONS_VISIBILITE, null, msgs);
      if (newConditionsVisibilite != null)
        msgs = ((InternalEObject)newConditionsVisibilite).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GAMEPackage.PERSONNE__CONDITIONS_VISIBILITE, null, msgs);
      msgs = basicSetConditionsVisibilite(newConditionsVisibilite, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GAMEPackage.PERSONNE__CONDITIONS_VISIBILITE, newConditionsVisibilite, newConditionsVisibilite));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GAMEPackage.PERSONNE__DESCRIPTIONS:
        return basicSetDescriptions(null, msgs);
      case GAMEPackage.PERSONNE__INTERACTION:
        return basicSetInteraction(null, msgs);
      case GAMEPackage.PERSONNE__CONDITIONS_VISIBILITE:
        return basicSetConditionsVisibilite(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GAMEPackage.PERSONNE__NAME:
        return getName();
      case GAMEPackage.PERSONNE__LOCALISATION:
        if (resolve) return getLocalisation();
        return basicGetLocalisation();
      case GAMEPackage.PERSONNE__DESCRIPTIONS:
        return getDescriptions();
      case GAMEPackage.PERSONNE__INTERACTION:
        return getInteraction();
      case GAMEPackage.PERSONNE__VISIBILITE:
        return getVisibilite();
      case GAMEPackage.PERSONNE__CONDITIONS_VISIBILITE:
        return getConditionsVisibilite();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GAMEPackage.PERSONNE__NAME:
        setName((String)newValue);
        return;
      case GAMEPackage.PERSONNE__LOCALISATION:
        setLocalisation((Lieu)newValue);
        return;
      case GAMEPackage.PERSONNE__DESCRIPTIONS:
        setDescriptions((Description)newValue);
        return;
      case GAMEPackage.PERSONNE__INTERACTION:
        setInteraction((Interaction)newValue);
        return;
      case GAMEPackage.PERSONNE__VISIBILITE:
        setVisibilite((Visibilite)newValue);
        return;
      case GAMEPackage.PERSONNE__CONDITIONS_VISIBILITE:
        setConditionsVisibilite((Condition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GAMEPackage.PERSONNE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case GAMEPackage.PERSONNE__LOCALISATION:
        setLocalisation((Lieu)null);
        return;
      case GAMEPackage.PERSONNE__DESCRIPTIONS:
        setDescriptions((Description)null);
        return;
      case GAMEPackage.PERSONNE__INTERACTION:
        setInteraction((Interaction)null);
        return;
      case GAMEPackage.PERSONNE__VISIBILITE:
        setVisibilite(VISIBILITE_EDEFAULT);
        return;
      case GAMEPackage.PERSONNE__CONDITIONS_VISIBILITE:
        setConditionsVisibilite((Condition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GAMEPackage.PERSONNE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case GAMEPackage.PERSONNE__LOCALISATION:
        return localisation != null;
      case GAMEPackage.PERSONNE__DESCRIPTIONS:
        return descriptions != null;
      case GAMEPackage.PERSONNE__INTERACTION:
        return interaction != null;
      case GAMEPackage.PERSONNE__VISIBILITE:
        return visibilite != VISIBILITE_EDEFAULT;
      case GAMEPackage.PERSONNE__CONDITIONS_VISIBILITE:
        return conditionsVisibilite != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", visibilite: ");
    result.append(visibilite);
    result.append(')');
    return result.toString();
  }

} //PersonneImpl
