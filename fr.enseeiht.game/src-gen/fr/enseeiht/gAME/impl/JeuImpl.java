/**
 * generated by Xtext 2.17.1
 */
package fr.enseeiht.gAME.impl;

import fr.enseeiht.gAME.Chemin;
import fr.enseeiht.gAME.Connaissance;
import fr.enseeiht.gAME.Explorateur;
import fr.enseeiht.gAME.GAMEPackage;
import fr.enseeiht.gAME.Jeu;
import fr.enseeiht.gAME.Lieu;
import fr.enseeiht.gAME.Objet;
import fr.enseeiht.gAME.ObjetAvecQuantite;
import fr.enseeiht.gAME.Personne;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Jeu</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.enseeiht.gAME.impl.JeuImpl#getName <em>Name</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.JeuImpl#getExplorateur <em>Explorateur</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.JeuImpl#getPointDepart <em>Point Depart</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.JeuImpl#getPointFin <em>Point Fin</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.JeuImpl#getLieux <em>Lieux</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.JeuImpl#getObjets <em>Objets</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.JeuImpl#getObjetAvecQuantite <em>Objet Avec Quantite</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.JeuImpl#getConnaissances <em>Connaissances</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.JeuImpl#getPersonnes <em>Personnes</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.JeuImpl#getChemins <em>Chemins</em>}</li>
 * </ul>
 *
 * @generated
 */
public class JeuImpl extends MinimalEObjectImpl.Container implements Jeu
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getExplorateur() <em>Explorateur</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExplorateur()
   * @generated
   * @ordered
   */
  protected Explorateur explorateur;

  /**
   * The cached value of the '{@link #getPointDepart() <em>Point Depart</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPointDepart()
   * @generated
   * @ordered
   */
  protected Lieu pointDepart;

  /**
   * The cached value of the '{@link #getPointFin() <em>Point Fin</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPointFin()
   * @generated
   * @ordered
   */
  protected EList<Lieu> pointFin;

  /**
   * The cached value of the '{@link #getLieux() <em>Lieux</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLieux()
   * @generated
   * @ordered
   */
  protected EList<Lieu> lieux;

  /**
   * The cached value of the '{@link #getObjets() <em>Objets</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjets()
   * @generated
   * @ordered
   */
  protected EList<Objet> objets;

  /**
   * The cached value of the '{@link #getObjetAvecQuantite() <em>Objet Avec Quantite</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjetAvecQuantite()
   * @generated
   * @ordered
   */
  protected EList<ObjetAvecQuantite> objetAvecQuantite;

  /**
   * The cached value of the '{@link #getConnaissances() <em>Connaissances</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConnaissances()
   * @generated
   * @ordered
   */
  protected EList<Connaissance> connaissances;

  /**
   * The cached value of the '{@link #getPersonnes() <em>Personnes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPersonnes()
   * @generated
   * @ordered
   */
  protected EList<Personne> personnes;

  /**
   * The cached value of the '{@link #getChemins() <em>Chemins</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChemins()
   * @generated
   * @ordered
   */
  protected EList<Chemin> chemins;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected JeuImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GAMEPackage.Literals.JEU;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GAMEPackage.JEU__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Explorateur getExplorateur()
  {
    return explorateur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExplorateur(Explorateur newExplorateur, NotificationChain msgs)
  {
    Explorateur oldExplorateur = explorateur;
    explorateur = newExplorateur;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GAMEPackage.JEU__EXPLORATEUR, oldExplorateur, newExplorateur);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExplorateur(Explorateur newExplorateur)
  {
    if (newExplorateur != explorateur)
    {
      NotificationChain msgs = null;
      if (explorateur != null)
        msgs = ((InternalEObject)explorateur).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GAMEPackage.JEU__EXPLORATEUR, null, msgs);
      if (newExplorateur != null)
        msgs = ((InternalEObject)newExplorateur).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GAMEPackage.JEU__EXPLORATEUR, null, msgs);
      msgs = basicSetExplorateur(newExplorateur, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GAMEPackage.JEU__EXPLORATEUR, newExplorateur, newExplorateur));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Lieu getPointDepart()
  {
    if (pointDepart != null && pointDepart.eIsProxy())
    {
      InternalEObject oldPointDepart = (InternalEObject)pointDepart;
      pointDepart = (Lieu)eResolveProxy(oldPointDepart);
      if (pointDepart != oldPointDepart)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GAMEPackage.JEU__POINT_DEPART, oldPointDepart, pointDepart));
      }
    }
    return pointDepart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Lieu basicGetPointDepart()
  {
    return pointDepart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPointDepart(Lieu newPointDepart)
  {
    Lieu oldPointDepart = pointDepart;
    pointDepart = newPointDepart;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GAMEPackage.JEU__POINT_DEPART, oldPointDepart, pointDepart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Lieu> getPointFin()
  {
    if (pointFin == null)
    {
      pointFin = new EObjectResolvingEList<Lieu>(Lieu.class, this, GAMEPackage.JEU__POINT_FIN);
    }
    return pointFin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Lieu> getLieux()
  {
    if (lieux == null)
    {
      lieux = new EObjectContainmentEList<Lieu>(Lieu.class, this, GAMEPackage.JEU__LIEUX);
    }
    return lieux;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Objet> getObjets()
  {
    if (objets == null)
    {
      objets = new EObjectContainmentEList<Objet>(Objet.class, this, GAMEPackage.JEU__OBJETS);
    }
    return objets;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ObjetAvecQuantite> getObjetAvecQuantite()
  {
    if (objetAvecQuantite == null)
    {
      objetAvecQuantite = new EObjectContainmentEList<ObjetAvecQuantite>(ObjetAvecQuantite.class, this, GAMEPackage.JEU__OBJET_AVEC_QUANTITE);
    }
    return objetAvecQuantite;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Connaissance> getConnaissances()
  {
    if (connaissances == null)
    {
      connaissances = new EObjectContainmentEList<Connaissance>(Connaissance.class, this, GAMEPackage.JEU__CONNAISSANCES);
    }
    return connaissances;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Personne> getPersonnes()
  {
    if (personnes == null)
    {
      personnes = new EObjectContainmentEList<Personne>(Personne.class, this, GAMEPackage.JEU__PERSONNES);
    }
    return personnes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Chemin> getChemins()
  {
    if (chemins == null)
    {
      chemins = new EObjectContainmentEList<Chemin>(Chemin.class, this, GAMEPackage.JEU__CHEMINS);
    }
    return chemins;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GAMEPackage.JEU__EXPLORATEUR:
        return basicSetExplorateur(null, msgs);
      case GAMEPackage.JEU__LIEUX:
        return ((InternalEList<?>)getLieux()).basicRemove(otherEnd, msgs);
      case GAMEPackage.JEU__OBJETS:
        return ((InternalEList<?>)getObjets()).basicRemove(otherEnd, msgs);
      case GAMEPackage.JEU__OBJET_AVEC_QUANTITE:
        return ((InternalEList<?>)getObjetAvecQuantite()).basicRemove(otherEnd, msgs);
      case GAMEPackage.JEU__CONNAISSANCES:
        return ((InternalEList<?>)getConnaissances()).basicRemove(otherEnd, msgs);
      case GAMEPackage.JEU__PERSONNES:
        return ((InternalEList<?>)getPersonnes()).basicRemove(otherEnd, msgs);
      case GAMEPackage.JEU__CHEMINS:
        return ((InternalEList<?>)getChemins()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GAMEPackage.JEU__NAME:
        return getName();
      case GAMEPackage.JEU__EXPLORATEUR:
        return getExplorateur();
      case GAMEPackage.JEU__POINT_DEPART:
        if (resolve) return getPointDepart();
        return basicGetPointDepart();
      case GAMEPackage.JEU__POINT_FIN:
        return getPointFin();
      case GAMEPackage.JEU__LIEUX:
        return getLieux();
      case GAMEPackage.JEU__OBJETS:
        return getObjets();
      case GAMEPackage.JEU__OBJET_AVEC_QUANTITE:
        return getObjetAvecQuantite();
      case GAMEPackage.JEU__CONNAISSANCES:
        return getConnaissances();
      case GAMEPackage.JEU__PERSONNES:
        return getPersonnes();
      case GAMEPackage.JEU__CHEMINS:
        return getChemins();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GAMEPackage.JEU__NAME:
        setName((String)newValue);
        return;
      case GAMEPackage.JEU__EXPLORATEUR:
        setExplorateur((Explorateur)newValue);
        return;
      case GAMEPackage.JEU__POINT_DEPART:
        setPointDepart((Lieu)newValue);
        return;
      case GAMEPackage.JEU__POINT_FIN:
        getPointFin().clear();
        getPointFin().addAll((Collection<? extends Lieu>)newValue);
        return;
      case GAMEPackage.JEU__LIEUX:
        getLieux().clear();
        getLieux().addAll((Collection<? extends Lieu>)newValue);
        return;
      case GAMEPackage.JEU__OBJETS:
        getObjets().clear();
        getObjets().addAll((Collection<? extends Objet>)newValue);
        return;
      case GAMEPackage.JEU__OBJET_AVEC_QUANTITE:
        getObjetAvecQuantite().clear();
        getObjetAvecQuantite().addAll((Collection<? extends ObjetAvecQuantite>)newValue);
        return;
      case GAMEPackage.JEU__CONNAISSANCES:
        getConnaissances().clear();
        getConnaissances().addAll((Collection<? extends Connaissance>)newValue);
        return;
      case GAMEPackage.JEU__PERSONNES:
        getPersonnes().clear();
        getPersonnes().addAll((Collection<? extends Personne>)newValue);
        return;
      case GAMEPackage.JEU__CHEMINS:
        getChemins().clear();
        getChemins().addAll((Collection<? extends Chemin>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GAMEPackage.JEU__NAME:
        setName(NAME_EDEFAULT);
        return;
      case GAMEPackage.JEU__EXPLORATEUR:
        setExplorateur((Explorateur)null);
        return;
      case GAMEPackage.JEU__POINT_DEPART:
        setPointDepart((Lieu)null);
        return;
      case GAMEPackage.JEU__POINT_FIN:
        getPointFin().clear();
        return;
      case GAMEPackage.JEU__LIEUX:
        getLieux().clear();
        return;
      case GAMEPackage.JEU__OBJETS:
        getObjets().clear();
        return;
      case GAMEPackage.JEU__OBJET_AVEC_QUANTITE:
        getObjetAvecQuantite().clear();
        return;
      case GAMEPackage.JEU__CONNAISSANCES:
        getConnaissances().clear();
        return;
      case GAMEPackage.JEU__PERSONNES:
        getPersonnes().clear();
        return;
      case GAMEPackage.JEU__CHEMINS:
        getChemins().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GAMEPackage.JEU__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case GAMEPackage.JEU__EXPLORATEUR:
        return explorateur != null;
      case GAMEPackage.JEU__POINT_DEPART:
        return pointDepart != null;
      case GAMEPackage.JEU__POINT_FIN:
        return pointFin != null && !pointFin.isEmpty();
      case GAMEPackage.JEU__LIEUX:
        return lieux != null && !lieux.isEmpty();
      case GAMEPackage.JEU__OBJETS:
        return objets != null && !objets.isEmpty();
      case GAMEPackage.JEU__OBJET_AVEC_QUANTITE:
        return objetAvecQuantite != null && !objetAvecQuantite.isEmpty();
      case GAMEPackage.JEU__CONNAISSANCES:
        return connaissances != null && !connaissances.isEmpty();
      case GAMEPackage.JEU__PERSONNES:
        return personnes != null && !personnes.isEmpty();
      case GAMEPackage.JEU__CHEMINS:
        return chemins != null && !chemins.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //JeuImpl
